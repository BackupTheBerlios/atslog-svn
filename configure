#!/bin/sh
# ATSlog version @version@ build @buildnumber@ www.atslog.dp.ua  
# Copyright (C) 2003 Denis CyxoB www.yamiyam.dp.ua
#

# Установим рабочие переменные
UNAME=`uname`

# Проверим наличие необходимых системных утулит.
checksysutils(){
    if [ "$UNAME" = "Linux" -o "$LINUXYES" = "YES" ];then
	MD5_PRG=md5sum
    else
	MD5_PRG=md5
    fi
    for ac_prg in sed awk head [ expr $MD5_PRG urandom printf mkdir cp ls rm find
    do
	echo -n "checking if system file \"$ac_prg\" is existing: "
	for ac_dir in /bin /sbin /usr/bin /usr/sbin /usr/local/bin /usr/local/sbin /dev
	do
	    if [ -e "$ac_dir/$ac_prg" ]; then
	        echo "YES"
		FILE_NOT_EXISTS=0
		break;
	    else
		FILE_NOT_EXISTS=1
	    fi
	done
	if [ $FILE_NOT_EXISTS -ne 0 ]; then
	    echo "NONE"
	    echo "configure aborted!"
	    exit 1
	fi
    done
}

# Генерируем случайный пароль
passwordgen(){
    if [ "$UNAME" = "Linux" -o "$LINUXYES" = "YES" ];then
# for Linux
	PASSWORD=`head -c 64 < /dev/urandom | md5sum | awk '{print $1}'| head -c 16`
    else
# for FreeBSD
	PASSWORD=`head -c 64 < /dev/urandom | md5 | awk '{print $1}'| head -c 16`
    fi
}

# Переменную $LANG - берём из настройки локали.
if [ -f ./lang/$LANG ]; then
    . ./lang/$LANG
elif [ -f ./lang/en_US ]; then
    . ./lang/en_US
else
    echo "Can't open language file"
    exit 1
fi

UPDATEQUESTION="YES"
DISABLE_LIBWRAP="NO"

for i
do
    case "$1" in
	"--help")
	    HELP="yes"
	;;
	--disable-update=[Yy][Ee][Ss])
	    UPDATEQUESTION="NO"
	;;
	--disable-libwrap=[Yy][Ee][Ss])
	    DISABLE_LIBWRAP="YES"
	;;
	--linux-version=*)
	    case "$1" in
	        "--linux-version=SuSE")
		    LINUXVERSION="suse"
	        ;;
	        "--linux-version=RedHat")
	    	    LINUXVERSION="redhat"
		;;
		"--linux-version=ASPlinux")
		    LINUXVERSION="asplinux"
		;;
		"--linux-version=ALTlinux")
		    LINUXVERSION="altlinux"
		;;
		"--linux-version=Mandriva")
		    LINUXVERSION="mandriva"
		;;
	    esac                        
	    LINUXYES="YES"	    
	;;
	--prefix=*)
	    PREFIX=`echo "$1" | sed 's/[-_a-zA-Z0-9]*=//'`
	;;
	--etc-prefix=*)
	    ETC_PREFX=`echo "$1" | sed 's/[-_a-zA-Z0-9]*=//'`
	;;
	--with-perl=*)
	    PERL=`echo "$1" | sed 's/[-_a-zA-Z0-9]*=//'`
	;;
	--logdir=*)
	    LOGDIR=`echo "$1" | sed 's/[-_a-zA-Z0-9]*=//'`
	;;
	--sql-type=*)
	    case "$1" in
	        "--sql-type=MySQL")
		    SQLTYPE=mysql
		    sqltype=MySQL
		    MYSQLBASE=yes
	        ;;
	        "--sql-type=PostgreSQL")
	    	    SQLTYPE=pgsql
		    sqltype=PostgreSQL
		    PGSQLBASE=yes
	    esac                        
	;;
    esac
    shift
done

if [ -z "$PREFIX" ]
then
    if [ "$UNAME" = "Linux" -o "$LINUXYES" = "YES" ];then
	PREFIX="/usr"
    else
	PREFIX="/usr/local"
    fi
fi

# Check for last slash "/" in the PREFIX
# Проверка на завершающий слеш "/" в переменной PREFIX
SUFIX=$(expr 0$PREFIX : 0".*\(\/\)\$")
while [ "$SUFIX" = "/" ] ;do
    PREFIX=$(expr 0$PREFIX : 0"\(.*\)/\$")
    SUFIX=$(expr 0$PREFIX : 0".*\(\/\)\$")
done

if [ -z "$ETC_PREFX" ]
then
    if [ "$UNAME" = "Linux" -o "$LINUXYES" = "YES" ];then
	if [ "$PREFIX" != "/usr" ]
	then                            
	    ETC_PREFX=${PREFIX}"/etc"
	else
	    ETC_PREFX="/etc"
	fi
    else
	if [ "$PREFIX" != "/usr/local" ]
	then                            
	    ETC_PREFX=${PREFIX}"/etc"
	else
	    ETC_PREFX="/usr/local/etc"
	fi
    fi
fi

echo "Usage: configure [options]
Options: [defaults in brackets after descriptions]
Use: configure --help for help.
Configuration:"

# Call to function
checksysutils

if [ -z "$PERL" ]
then
    PERL="/usr/bin/perl"
fi

if [ "$HELP" = "yes" ];then
    printf "$msg45" $ETC_PREFX $ETC_PREFX $PREFIX $ETC_PREFX $PERL
    exit 0
fi

# Readin config file
echo -n "checking for default config file: "
if [ -r ./include/atslog.conf.default ]; then
    . ./include/atslog.conf.default
    build=""
    echo " OK"
else
    echo " not found"
    echo "Can't open config file include/atslog.conf.default"
    exit 1
fi

# Создадим директорию для файлов сборки
echo making temporally dir ./tmp
if [ ! -d ./tmp ];then
    mkdir ./tmp
fi

# Начнём лог файл скрипта configure
echo -n > ./tmp/configure.log

# Копируем все файлы для дальнейших манипуляций над ними.
echo $msg46
for cur_files in `ls`
do
    if [ "$cur_files" != "tmp" ]; then
        cp -R ./$cur_files ./tmp
    fi
done
rm ./tmp/Makefile
rm ./tmp/configure
rm ./tmp/atslogsetup
find ./tmp \( -name ".svn" -or -name "CVS" \) -exec rm -rf {} ';' 1>>./tmp/configure.log 2>>./tmp/configure.log

echo checking for PREFIX path $PREFIX

echo checking for ETC_PREFX path $ETC_PREFX

# Установим рабочие переменные
PATH=/sbin:/usr/sbin:/bin:/usr/bin:/usr/local/sbin:/usr/local/bin:.
PATH=$PATH:$bindir:$sharedir
# Назначим путь к клиенту БД
PGSQLPATH=$PREFIX/bin/psql
MYSQLPATH=$PREFIX/bin/mysql

# Если ставим на Linux, то переназначим некоторые переменные
if [ "$UNAME" = "Linux" -o "$LINUXYES" = "YES" ];then
# Переопределим некоторые переменные для среды Linux
    initscript=/etc/init.d/atslog
    monthlyscript=/etc/cron.monthly/atslogrotate
    dailyscript=/etc/cron.daily/atslogdaily
    port=ttyS0
# Определимся с релизом Linux:
    if [ ! "$LINUXVERSION" = "" ];then
	cp ./rc.d/Linux/atslogdinit.$LINUXVERSION ./tmp/rc.d/atslogdinit.tmp
    else
	if [ -r /etc/mandrake-release -o -r /etc/mandrakelinux-release -o -r /etc/mandriva-release ];then
# Mandriva
	    LINUXVERSION="mandriva"
        elif [ -r  /etc/redhat-release ];then
# RedHat
	    LINUXVERSION="redhat"
	elif [ -r /etc/asplinux-release ];then
# ASP-Linux
	    LINUXVERSION="asplinux"
	elif [ -r /etc/altlinux-release ];then
# ALT Linux
	    LINUXVERSION="altlinux"
	elif [ -r /etc/SuSE-release ];then
# SuSE
	    LINUXVERSION="suse"
	else
# Для других версий Linux, кроме перечисленных выше
	    LINUXVERSION="redhat"
	fi
    fi
    cp ./rc.d/Linux/atslogdinit.$LINUXVERSION ./tmp/rc.d/atslogdinit.tmp
else
# Все другие операционные системы кроме Linux.
    cp ./rc.d/FreeBSD/atslogdinit.sh ./tmp/rc.d/atslogdinit.tmp
fi

# Заменим PREFIX
bindir=`echo "$bindir" | sed "s%/usr/local%$PREFIX%g"`
echo checking for bin directory $bindir

libdir=`echo "$libdir" | sed "s%/usr/local%$PREFIX%g"`
echo checking for lib directory $libdir

sharedir=`echo "$sharedir" | sed "s%/usr/local%$PREFIX%g"`
echo checking for share directory $sharedir

monthlyscript=`echo "$monthlyscript" | sed "s%/usr/local%$PREFIX%g"`
echo checking for monthlyscript path $monthlyscript

dailyscript=`echo "$dailyscript" | sed "s%/usr/local%$PREFIX%g"`
echo checking for dailyscript path $dailyscript

initscript=`echo "$initscript" | sed "s%/usr/local%$PREFIX%g"`
echo checking for initscript path $initscript


# Проверим есть ли в системе старые версии конфигурационных файлов
echo -n "checking for old config files:"
if [ -r $ETC_PREFX/panalog.conf ]; then
    if [ "$UPDATEQUESTION" = "YES" ];then
	UPDATE="YES"
	CONFONE="YES"
    fi
fi

if [ -r $ETC_PREFX/atslog.conf ]; then
    if [ "$UPDATEQUESTION" = "YES" ];then
	UPDATE="YES"
	CONFTWO="YES"
    fi
fi

if [ "$CONFONE" = "YES" -o "$CONFTWO" = "YES" ];then
    echo " OK"
	if [ "$CONFONE" = "YES" ];then
	    printf "$msg36" $ETC_PREFX
	fi
	if [ "$CONFTWO" = "YES" ];then
	    printf "$msg37" $ETC_PREFX
	fi
else
    echo " NONE"
fi

echo checking for Perl path $PERL

case "$UPDATE" in
[Yy][Ee][Ss])
    echo $msg38
	if [ -r $ETC_PREFX/panalog.conf ]; then
	    SHAREDIR=$sharedir
	    MASTERSCRIPT=$masterscript
	    CLEARDB=$cleardb
	    PIDFILE=$pidfile

	    . $ETC_PREFX/panalog.conf

	    port=`basename $port`    
	    callslogfile=`basename $callslogfile`
	    startlogfile=`basename $startlogfile`
	    sharedir=$SHAREDIR
	    masterscript=$MASTERSCRIPT
	    cleardb=$CLEARDB
	    pidfile=$PIDFILE
	fi

	if [ -r $ETC_PREFX/atslog.conf ]; then
	    . $ETC_PREFX/atslog.conf
	    if [ -z "$sqlmaspasswd" ];then
	        sqlmaspasswd=$sqlpassword
	    fi
	    if [ ! -z "$sqluser" ];then
	        sqlmasteruser=$sqluser
	    fi
	    if [ ! -z "$nowrlog" ];then
	        debug=$nowrlog
	    fi
	fi
	
	if [ "$sqltype" = "PostgreSQL" ];then
	    sqltype=PostgreSQL
	    SQLTYPE=pgsql
	else
	    sqltype=MySQL
	    SQLTYPE=mysql
	fi
    ;;
    *)
	echo $msg39
	echo -n "checking for installed PostgreSQL database: "
	if [ "$MYSQLBASE" != "yes" ];then
	    if [ -x $PGSQLPATH ];then
		sqltype=PostgreSQL
		SQLTYPE=pgsql
		if [ "$PGSQLBASE" = "yes" ];then
		    echo OPTIONED
		else
	    	    echo EXIST
		fi
	    else
		if [ "$PGSQLBASE" = "yes" ];then
		    sqltype=PostgreSQL
		    SQLTYPE=pgsql
		    echo OPTIONED
		else
		    echo NOT INSTALLED
# Проверим сервер баз данных, записанный в конфигурационном файле, и назначим
# значения по молчанию.
		    if [ "$sqltype" = "PostgreSQL" ];then
            		SQLTYPE=pgsql
		    else
			SQLTYPE=mysql
		    sqltype=MySQL
		    fi
		fi
	    fi
	else
	    echo "NOT USED"
	fi

	echo -n "checking for installed MySQL database: "
	if [ "$PGSQLBASE" != "yes" ];then
	    if [ -x $MYSQLPATH ];then
		sqltype=MySQL
		SQLTYPE=mysql
		if [ "$MYSQLBASE" = "yes" ];then
		    echo OPTIONED
		else
		    echo EXIST
		fi
	    else
		if [ "$MYSQLBASE" = "yes" ];then
		    sqltype=MySQL
		    SQLTYPE=mysql
		    echo OPTIONED
		else
		    echo NOT INSTALLED
# Проверим сервер баз данных, записанный в конфигурационном файле, и назначим
# значения по молчанию.
		    if [ "$sqltype" = "PostgreSQL" ];then
            		SQLTYPE=pgsql
		    else
			SQLTYPE=mysql
		    sqltype=MySQL
		    fi
		fi
	    fi
	else
	    echo "NOT USED"
	fi

	
    ;;
esac

echo using database: $sqltype

if [ "$sqlhost" = "localhost" ];then
    sqlfromhost=localhost
else
    sqlfromhost=`hostname`
fi

if [ -n "$LOGDIR" ]
then
    logdir=$LOGDIR
fi

if [ "$UNAME" = "Linux" -o "$LINUXYES" = "YES" ];then
    if [ "$PREFIX" != "/usr" ]
    then                            
	logdir=${PREFIX}${logdir}
    fi
else
    if [ "$PREFIX" != "/usr/local" ]
    then                            
	logdir=${PREFIX}${logdir}
    fi
fi

echo checking for log directory $logdir

if [ "$UNAME" = "Linux" -o "$LINUXYES" = "YES" ];then
    if [ "$PREFIX" != "/usr" ]
    then                            
	pidfile=${PREFIX}${pidfile}
    fi
else
    if [ "$PREFIX" != "/usr/local" ]
    then                            
	pidfile=${PREFIX}${pidfile}
    fi
fi

if [ "$LINUXVERSION" = "mandriva" ];then
    LIBNSL=" -lnsl"
fi

if [ "$UNAME" = "Linux" -o "$LINUXYES" = "YES" ];then
    echo checking for Linux version is: $LINUXVERSION
fi

echo checking for PID file path $pidfile



if [ -z "$sqlmaspasswd" ];then
    printf "$msg40" $sqlmasteruser
# Используем генерированный пароль для работы с SQL сервером
    passwordgen
    sqlmaspasswd=$PASSWORD
fi

 sed \
 -e "s/sqlhost=''/sqlhost='$sqlhost'/g" \
 -e "s/sqldatabase=''/sqldatabase='$sqldatabase'/g" \
 -e "s/sqlmasteruser=''/sqlmasteruser='$sqlmasteruser'/g" \
 -e "s/sqlmaspasswd=''/sqlmaspasswd='$sqlmaspasswd'/g" \
 -e "s/sqltype=''/sqltype='$sqltype'/g" \
 -e "s/model=''/model='$model'/g" \
 < ./www/atslog/include/set/conf.inc.php > ./tmp/www/atslog/include/set/conf.inc.php

case "$UPDATE" in
    [Yy][Ee][Ss])
	if [ 0$build -lt 028 ]  ;then
	    echo checking for update from build 28
	    cat ./sql/updateto28.mysql.sql >> ./tmp/sql/thisupdatesqltables.mysql.sql.tmp
	fi

	if [ 0$build -lt 030 ]  ;then
	    echo checking for update from build 30
	    cat ./sql/updateto30.mysql.sql >> ./tmp/sql/thisupdatesqltables.mysql.sql.tmp
	fi

	if [ 0$build -lt 034 ]  ;then
	    echo checking for update from build 34
	    cat ./sql/updateto34.mysql.sql >> ./tmp/sql/thisupdatesqltables.mysql.sql.tmp
	fi

	if [ 0$build -lt 060 ]  ;then
	    echo checking for update from build 60
	    cat ./sql/updateto60.mysql.sql >> ./tmp/sql/thisupdatesqltables.mysql.sql.tmp
	fi

	if [ 0$build -lt 088 ]  ;then
	    echo checking for update from build 88
	    cat ./sql/updateto88.mysql.sql >> ./tmp/sql/thisupdatesqltables.mysql.sql.tmp
	fi

	if [ -f ./tmp/sql/thisupdatesqltables.$SQLTYPE.sql.tmp ];then
	    sed \
	     -e "s/@sqlmaspasswd@/$sqlmaspasswd/g" \
	     -e "s/@sqlfromhost@/$sqlfromhost/g" \
	     -e "s/@sqlmasteruser@/$sqlmasteruser/g" \
	     -e "s/@sqlhost@/$sqlhost/g" \
	     -e "s/@sqldatabase@/$sqldatabase/g" \
	     < ./tmp/sql/thisupdatesqltables.$SQLTYPE.sql.tmp > ./tmp/sql/thisupdatesqltables.$SQLTYPE.sql
	fi
	if [ -f ./tmp/sql/thisupdatesqltables.mysql.sql.tmp ];then
	    rm ./tmp/sql/thisupdatesqltables.mysql.sql.tmp
	fi
	if [ -f ./tmp/sql/thisupdatesqltables.pgsql.sql.tmp ];then
	    rm ./tmp/sql/thisupdatesqltables.pgsql.sql.tmp
	fi

	echo $msg41
    ;;
        *)
	if [ -f ./sql/createsqltables.$SQLTYPE.sql ];then
	sed \
	     -e "s/@sqlmaspasswd@/$sqlmaspasswd/g" \
	     -e "s/@sqlfromhost@/$sqlfromhost/g" \
	     -e "s/@sqlmasteruser@/$sqlmasteruser/g" \
	     -e "s/@sqlhost@/$sqlhost/g" \
	     -e "s/@sqldatabase@/$sqldatabase/g" \
	     < ./sql/createsqltables.$SQLTYPE.sql > ./tmp/sql/thiscreatesqltables.$SQLTYPE.sql
	fi

	if [ -f ./sql/createuser.$SQLTYPE.sql ];then
	sed \
	     -e "s/@sqlmaspasswd@/$sqlmaspasswd/g" \
	     -e "s/@sqlfromhost@/$sqlfromhost/g" \
	     -e "s/@sqlmasteruser@/$sqlmasteruser/g" \
	     -e "s/@sqlhost@/$sqlhost/g" \
	     -e "s/@sqldatabase@/$sqldatabase/g" \
	     < ./sql/createuser.$SQLTYPE.sql > ./tmp/sql/thiscreateuser.$SQLTYPE.sql
	fi

	echo $msg42
    ;;
esac

 sed \
 -e "s/^sqlmasteruser=atslog/sqlmasteruser=$sqlmasteruser/g" \
 -e "s/^sqlmaspasswd=/sqlmaspasswd=$sqlmaspasswd/g" \
 -e "s/^sqlhost=localhost/sqlhost=$sqlhost/g" \
 -e "s/^sqldatabase=atslog/sqldatabase=$sqldatabase/g" \
 -e "s%^port=cuaa0%port=$port%g" \
 -e "s%^speed=9600%speed=$speed%g" \
 -e "s%^stopbits=1%stopbits=$stopbits%g" \
 -e "s%^charsize=8%charsize=$charsize%g" \
 -e "s%^parity=n%parity=$parity%g" \
 -e "s/^callslogfile=calls.log/callslogfile=$callslogfile/g" \
 -e "s/^startlogfile=atstart.log/startlogfile=$startlogfile/g" \
 -e "s%^bindir=/usr/local/bin%bindir=$bindir%g" \
 -e "s%^langdir=lang%langdir=$langdir%g" \
 -e "s%^logdir=/var/log/atslog%logdir=$logdir%g" \
 -e "s%^howmonth=12%howmonth=$howmonth%g" \
 -e "s%^model=KX-TA616RU%model=$model%g" \
 -e "s%^syslogfacility=user.err%syslogfacility=$syslogfacility%g" \
 -e "s%^libdir=/usr/local/libexec/atslog%libdir=$libdir%g" \
 -e "s%^sharedir=/usr/local/share/atslog%sharedir=$sharedir%g" \
 -e "s%^atslogd=atslogd%atslogd=$atslogd%g" \
 -e "s%^masterscript=atslogmaster%masterscript=$masterscript%g" \
 -e "s%^initscript=/usr/local/etc/rc.d/atslogdinit.sh%initscript=$initscript%g" \
 -e "s%^monthlyscript=/usr/local/etc/periodic/monthly/atslogrotate%monthlyscript=$monthlyscript%g" \
 -e "s%^dailyscript=/usr/local/etc/periodic/daily/atslogdaily%dailyscript=$dailyscript%g" \
 -e "s%^atslogdb=atslogdb.pl%atslogdb=$atslogdb%g" \
 -e "s%^cleardb=atslogcleardb.pl%cleardb=$cleardb%g" \
 -e "s%^curcallslogfile=currentcalls.log%curcallslogfile=$curcallslogfile%g" \
 -e "s%^notwritelog=notwrite.log%notwritelog=$notwritelog%g" \
 -e "s%^debug=no%debug=$debug%g" \
 -e "s%^pidfile=/var/run/atslogd.pid%pidfile=$pidfile%g" \
 -e "s%^fastwrite=yes%fastwrite=$fastwrite%g" \
 -e "s%^sqltype=MySQL%sqltype=$sqltype%g" \
 < ./include/atslog.conf.default > ./tmp/include/atslog.conf

 echo checking for Perl path in scripts/checkDBD.pl
 sed \
 -e "s%/usr/bin/perl%$PERL%g" \
 < ./scripts/checkDBD.pl > ./tmp/scripts/checkDBD.pl
 chmod a+x ./tmp/scripts/checkDBD.pl

 echo checking for Perl path in scripts/createdb.pl
 sed \
 -e "s%/usr/bin/perl%$PERL%g" \
 < ./scripts/createdb.pl > ./tmp/scripts/createdb.pl
 chmod a+x ./tmp/scripts/createdb.pl

 echo checking for Perl path in atslogcleardb.pl
 sed \
 -e "s%/usr/bin/perl%$PERL%g" \
 < ./include/atslogcleardb.pl > ./tmp/include/atslogcleardb.pl.tmp

 echo checking for config file path in atslogcleardb.pl
 sed \
 -e "s%/usr/local/etc/atslog.conf%$ETC_PREFX/atslog.conf%g" \
 < ./tmp/include/atslogcleardb.pl.tmp > ./tmp/include/atslogcleardb.pl
 if [ -f ./tmp/include/atslogcleardb.pl.tmp ];then
    rm ./tmp/include/atslogcleardb.pl.tmp
 fi

 echo checking for config file path in manuals:
 sed \
 -e "s%/usr/local/etc/atslog.conf%$ETC_PREFX/atslog.conf%g" \
 < ./USING > ./tmp/USAGE
 sed \
 -e "s%/usr/local/etc/atslog.conf%$ETC_PREFX/atslog.conf%g" \
 < ./man/en/atslogd.8 > ./tmp/man/en/atslogd.8
 sed \
 -e "s%/usr/local/etc/atslog.conf%$ETC_PREFX/atslog.conf%g" \
 < ./man/en/atslogd.8.txt > ./tmp/man/en/atslogd.8.txt
 sed \
 -e "s%/usr/local/etc/atslog.conf%$ETC_PREFX/atslog.conf%g" \
 < ./man/ru.KOI8-R/atslogd.8 > ./tmp/man/ru.KOI8-R/atslogd.8
 sed \
 -e "s%/usr/local/etc/atslog.conf%$ETC_PREFX/atslog.conf%g" \
 < ./man/ru.KOI8-R/atslogd.8.txt > ./tmp/man/ru.KOI8-R/atslogd.8.txt
 sed \
 -e "s%/usr/local/etc/atslog.conf%$ETC_PREFX/atslog.conf%g" \
 < ./man/ru.KOI8-R/atslogmaster.8 > ./tmp/man/ru.KOI8-R/atslogmaster.8
 sed \
 -e "s%/usr/local/etc/atslog.conf%$ETC_PREFX/atslog.conf%g" \
 < ./man/ru.KOI8-R/atslogmaster.8.txt > ./tmp/man/ru.KOI8-R/atslogmaster.8.txt
 sed \
 -e "s%/usr/local/etc/atslog.conf%$ETC_PREFX/atslog.conf%g" \
 < ./man/en/atslogmaster.8 > ./tmp/man/en/atslogmaster.8
 sed \
 -e "s%/usr/local/etc/atslog.conf%$ETC_PREFX/atslog.conf%g" \
 < ./man/en/atslogmaster.8.txt > ./tmp/man/en/atslogmaster.8.txt

 echo checking for Perl path in atslogdb.pl
 sed \
 -e "s%/usr/bin/perl%$PERL%g" \
 < ./include/atslogdb.pl > ./tmp/include/atslogdb.pl.tmp

 echo checking for config file path in atslogdb.pl
 sed \
 -e "s%/usr/local/etc/atslog.conf%$ETC_PREFX/atslog.conf%g" \
 < ./tmp/include/atslogdb.pl.tmp > ./tmp/include/atslogdb.pl
 if [ -f ./tmp/include/atslogdb.pl.tmp ];then
    rm ./tmp/include/atslogdb.pl.tmp
 fi

 echo checking for config file path in atslogmaster
 sed \
 -e "s%/usr/local/etc/atslog.conf%$ETC_PREFX/atslog.conf%g" \
 < ./include/atslogmaster > ./tmp/include/atslogmaster

 echo checking for config file path in atslogdaily
 sed \
 -e "s%/usr/local/etc/atslog.conf%$ETC_PREFX/atslog.conf%g" \
 < ./include/atslogdaily > ./tmp/include/atslogdaily

 echo checking for config file path in atslogrotate
 sed \
 -e "s%/usr/local/etc/atslog.conf%$ETC_PREFX/atslog.conf%g" \
 < ./include/atslogrotate > ./tmp/include/atslogrotate

 echo checking for PREFIX path in Makefile
 sed \
 -e "s%/usr/local%$PREFIX%g" \
 < ./Makefile > ./tmp/Makefile

 echo checking for PREFIX path in installing script
 sed \
 -e "s%PREFIX_FROM_CONFIGURE_SCRIPT=/usr/local%PREFIX_FROM_CONFIGURE_SCRIPT=$PREFIX%g" \
 < ./installing > ./tmp/installing.tmp

 echo checking for ETC_PREFX path in installing script
 sed \
 -e "s%ETC_PREFX_FROM_CONFIGURE_SCRIPT=/usr/local/etc%ETC_PREFX_FROM_CONFIGURE_SCRIPT=$ETC_PREFX%g" \
 < ./tmp/installing.tmp > ./tmp/installing
 if [ -f ./tmp/installing.tmp ];then
    rm ./tmp/installing.tmp
 fi

 echo checking for config file path in atslogdinit
 sed \
 -e "s%/usr/local/etc/atslog.conf%$ETC_PREFX/atslog.conf%g" \
 < ./tmp/rc.d/atslogdinit.tmp > ./tmp/rc.d/atslogdinit
 if [ -f ./tmp/rc.d/atslogdinit.tmp ];then
    rm ./tmp/rc.d/atslogdinit.tmp
 fi

 echo -n "checking for libwrap: "
 LIBWRAPTOUSE="LIBWRAP=-lwrap"
 DEFINELIBWRAPTOUSE="#define USE_LIBWRAP"
 if [ "$DISABLE_LIBWRAP" = "NO" ];then
    echo OK
 else
    LIBWRAPTOUSE="#LIBWRAP=-lwrap"
    DEFINELIBWRAPTOUSE="// #define USE_LIBWRAP"
    echo DO NOT USED
 fi
 sed \
 -e "s%LIBWRAP=-lwrap%${LIBWRAPTOUSE}%g" \
 < ./src/atslogd/Makefile > ./tmp/src/atslogd/Makefile.tmp
 sed \
 -e "s%#define USE_LIBWRAP%${DEFINELIBWRAPTOUSE}%g" \
 < ./src/atslogd/atslogd.h > ./tmp/src/atslogd/atslogd.h

 echo -n "checking for libnsl: "
 sed \
 -e "s%LIBWRAP=-lwrap%LIBWRAP=-lwrap${LIBNSL}%g" \
 < ./tmp/src/atslogd/Makefile.tmp > ./tmp/src/atslogd/Makefile
 if [ -f ./tmp/src/atslogd/Makefile.tmp ];then
    rm ./tmp/src/atslogd/Makefile.tmp
 fi
 if [ "$LIBNSL" != "" -a "$DISABLE_LIBWRAP" = "NO" ];then
    echo NECESSARY 
 else
    echo NOT NECESSARY 
 fi

 
# Check for Perl DBI.
    echo -n "checking for DBI $sqltype class for Perl: "
    ./tmp/scripts/checkDBD.pl $sqltype 1>>./tmp/configure.log 2>>./tmp/configure.log
    if [ $? -ne 0 ];then
	echo "ERROR"
	if [ "$SQLTYPE" = "pgsql" ];then
	    printf "$msg43"
	else
	    printf "$msg44"
	fi
	exit 1
    else
	echo "OK"
    fi

echo "Configure done."
echo "Configure done." > ./tmp/configure.flag
exit $?
