#!/bin/sh
# ATSlog version @version@ build @buildnumber@ www.atslog.dp.ua  
# Copyright (C) 2003 Denis CyxoB www.yamiyam.dp.ua
#

# Установим рабочие переменные
UNAME=`uname`

# Проверим наличие необходимых системных утулит.
checksysutils(){
    if [ "$UNAME" = "Linux" -o "$LINUXYES" = "YES" ];then
	MD5_PRG=md5sum
    else
	MD5_PRG=md5
    fi
    for ac_prg in sed awk head [ expr $MD5_PRG urandom
    do
	echo -n "checking if system file \"$ac_prg\" is existing: "
	for ac_dir in /bin /sbin /usr/bin /usr/sbin /usr/local/bin /usr/local/sbin /dev
	do
	    if [ -e "$ac_dir/$ac_prg" ]; then
	        echo "YES"
		FILE_NOT_EXISTS=0
		break;
	    else
		FILE_NOT_EXISTS=1
	    fi
	done
	if [ $FILE_NOT_EXISTS -ne 0 ]; then
	    echo "NONE"
	    echo "configure aborting!"
	    exit 1
	fi
    done
}

# Генерируем случайный пароль
passwordgen(){
    if [ "$UNAME" = "Linux" -o "$LINUXYES" = "YES" ];then
# for Linux
	PASSWORD=`head -c 64 < /dev/urandom | md5sum | awk '{print $1}'| head -c 16`
    else
# for FreeBSD
	PASSWORD=`head -c 64 < /dev/urandom | md5 | awk '{print $1}'| head -c 16`
    fi
}

UPDATEQUESTION="YES"

for i
do
    case "$1" in
	"--help")
	    HELP="yes"
	;;
	"--disable-update")
	    UPDATEQUESTION="NO"
	;;
	--linux-version=*)
	    case "$1" in
	        "--linux-version=SuSE")
		    LINUXVERSVION="suse"
	        ;;
	        "--linux-version=RedHat")
	    	    LINUXVERSVION="redhat"
		;;
		"--linux-version=ASPlinux")
		    LINUXVERSVION="asplinux"
		;;
		"--linux-version=ALTlinux")
		    LINUXVERSVION="altlinux"
		;;
	    esac                        
	    LINUXYES="YES"	    
	;;
	--prefix=*)
	    PREFIX=`echo "$1" | sed 's/[-_a-zA-Z0-9]*=//'`
	;;
	--with-perl=*)
	    PERL=`echo "$1" | sed 's/[-_a-zA-Z0-9]*=//'`
	;;
	--logdir=*)
	    LOGDIR=`echo "$1" | sed 's/[-_a-zA-Z0-9]*=//'`
	;;
	--sql-type=*)
	    case "$1" in
	        "--sql-type=MySQL")
		    SQLTYPE=mysql
		    sqltype=MySQL
		    MYSQLBASE=yes
	        ;;
	        "--sql-type=PostgreSQL")
	    	    SQLTYPE=pgsql
		    sqltype=PostgreSQL
		    PGSQLBASE=yes
	    esac                        
	;;
    esac
    shift
done

if [ -z "$PREFIX" ]
then
    if [ "$UNAME" = "Linux" -o "$LINUXYES" = "YES" ];then
	PREFIX="/usr"
    else
	PREFIX="/usr/local"
    fi
fi

if [ "$PREFIX" = "/" ];then
    TRUEPREFIX=$PREFIX
    NOTCONTINUEPREFIX=YES
fi

echo "Usage: configure [options]
Options: [defaults in brackets after descriptions]
Use: configure --help for help.
Configuration:"

# Call to function
checksysutils

# Check for last slash "/" in the PREFIX
# Проверка на завершающий слеш "/" в переменной PREFIX
SUFIX=$(expr 0$PREFIX : 0".*\(\/\)\$")
while [ "$SUFIX" = "/" ] ;do
    PREFIX=$(expr 0$PREFIX : 0"\(.*\)/\$")
    SUFIX=$(expr 0$PREFIX : 0".*\(\/\)\$")
done

if [ "$NOTCONTINUEPREFIX" != "YES" ];then
    TRUEPREFIX=$PREFIX
fi


if [ -z "$PERL" ]
then
    PERL="/usr/bin/perl"
fi


if [ "$HELP" = "yes" ];then

echo "--disable-update Произвести установку новой версии без учета
                 имеющихся в системе конфигурационных файлов.

		 Если параметр \" --disable-update\" не указан, то
		 будет произведён поиск старых файлов с настройками
		 ($PREFIX/etc/panalog.conf или $PREFIX/etc/atslog.conf)
		 и при положительном результате конфигурирование будет
		 происходить с учетом параметров из этих файлов.

--linux-version= Производитель Linux.
                 Возможные варианты (проверенные в работе версии Linux):
		 --linux-version=SuSE
		 --linux-version=RedHat
		 --linux-version=ASPlinux
		 --linux-version=ALTlinux
		 
		 Если параметр не будет указываться специально, то выбор
		 происходит автоматически.

--prefix=PREFIX  install architecture-independent files in PREFIX
                 [$PREFIX]

--with-perl=PERL
		 architecture-independen path to Perl
		 [$PERL]

--sql-type=[PostgreSQL|MySQL]
		 Database type. MySQL by default.
		 --sql-type=MySQL
		 --sql-type=PostgreSQL
"
    exit 0
fi

# Readin config file
echo -n "checking for default config file: "
if [ -r ./include/atslog.conf.default ]; then
    . ./include/atslog.conf.default
    build=""
    echo " OK"
else
    echo " not found"
    echo "Can't open config file include/atslog.conf.default"
    exit 1
fi


echo checking for PREFIX path $TRUEPREFIX

# Установим рабочие переменные
PATH=/sbin:/usr/sbin:/bin:/usr/bin:/usr/local/sbin:/usr/local/bin:.
PATH=$PATH:$bindir:$sharedir
# Назначим путь к клиенту БД
PGSQLPATH=$PREFIX/bin/psql
MYSQLPATH=$PREFIX/bin/mysql

# Если ставим на Linux, то переназначим некоторые переменные
if [ "$UNAME" = "Linux" -o "$LINUXYES" = "YES" ];then
# Переопределим некоторые переменные для среды Linux
    initscript=/etc/init.d/atslog
    monthlyscript=/etc/cron.monthly/atslogrotate
    dailyscript=/etc/cron.daily/atslogdaily
    port=ttyS0
# Определимся с релизом Linux:
    if [ ! "$LINUXVERSVION" = "" ];then
	cp ./Linux/atslogdinit.$LINUXVERSVION ./atslogdinit.out
    else
        if [ -r  /etc/redhat-release ];then
# RedHat
	    LINUXVERSVION="redhat"
	elif [ -r /etc/asplinux-release ];then
# ASP-Linux
	    LINUXVERSVION="asplinux"
	elif [ -r /etc/altlinux-release ];then
# ALT Linux
	    LINUXVERSVION="altlinux"
	elif [ -r /etc/SuSE-release ];then
# SuSE
	    LINUXVERSVION="suse"
	else
# Для других версий Linux, кроме перечисленных выше
	    LINUXVERSVION="redhat"
	fi
    fi
    cp ./Linux/atslogdinit.$LINUXVERSVION ./atslogdinit.out
else
# Все другие операционные системы кроме Linux.
    cp ./FreeBSD/atslogdinit.sh ./atslogdinit.out
fi

# Заменим PREFIX
bindir=`echo "$bindir" | sed "s%/usr/local%$PREFIX%g"`
echo checking for bin directory $bindir

libdir=`echo "$libdir" | sed "s%/usr/local%$PREFIX%g"`
echo checking for lib directory $libdir

sharedir=`echo "$sharedir" | sed "s%/usr/local%$PREFIX%g"`
echo checking for share directory $sharedir

monthlyscript=`echo "$monthlyscript" | sed "s%/usr/local%$PREFIX%g"`
echo checking for monthlyscript path $monthlyscript

dailyscript=`echo "$dailyscript" | sed "s%/usr/local%$PREFIX%g"`
echo checking for dailyscript path $dailyscript

initscript=`echo "$initscript" | sed "s%/usr/local%$PREFIX%g"`
echo checking for initscript path $initscript


# Проверим есть ли в системе старые версии конфигурационных файлов
echo -n "checking for old config files: "
if [ -r $PREFIX/etc/panalog.conf ]; then
    if [ "$UPDATEQUESTION" = "YES" ];then
	UPDATE="YES"
	CONFONE="YES"
    fi
fi

if [ -r $PREFIX/etc/atslog.conf ]; then
    if [ "$UPDATEQUESTION" = "YES" ];then
	UPDATE="YES"
	CONFTWO="YES"
    fi
fi

if [ "$CONFONE" = "YES" -o "$CONFTWO" = "YES" ];then
    echo " OK"
	if [ "$CONFONE" = "YES" ];then
	    echo "В системе найден конфигурационный файл $PREFIX/etc/panalog.conf"
	fi
	if [ "$CONFTWO" = "YES" ];then
	    echo "В системе найден конфигурационный файл $PREFIX/etc/atslog.conf"
	fi
else
    echo " NONE"
fi

echo checking for Perl path $PERL

case "$UPDATE" in
[Yy][Ee][Ss])
    echo "Продолжение конфигурирования с учётом данных из файлов, имеющихся в системе."
	if [ -r $PREFIX/etc/panalog.conf ]; then
	    SHAREDIR=$sharedir
	    MASTERSCRIPT=$masterscript
	    CLEARDB=$cleardb
	    PIDFILE=$pidfile

	    . $PREFIX/etc/panalog.conf

	    port=`basename $port`    
	    callslogfile=`basename $callslogfile`
	    startlogfile=`basename $startlogfile`
	    sharedir=$SHAREDIR
	    masterscript=$MASTERSCRIPT
	    cleardb=$CLEARDB
	    pidfile=$PIDFILE
	fi

	if [ -r $PREFIX/etc/atslog.conf ]; then
	    . $PREFIX/etc/atslog.conf
	    if [ -z "$sqlmaspasswd" ];then
	        sqlmaspasswd=$sqlpassword
	    fi
	    if [ ! -z "$sqluser" ];then
	        sqlmasteruser=$sqluser
	    fi
	    if [ ! -z "$nowrlog" ];then
	        debug=$nowrlog
	    fi
	fi
	
	if [ "$sqltype" = "PostgreSQL" ];then
	    sqltype=PostgreSQL
	    SQLTYPE=pgsql
	else
	    sqltype=MySQL
	    SQLTYPE=mysql
	fi
    ;;
    *)
	echo "Продолжение конфигурирования для новой установки ATSlog"
	echo -n "checking for PostgreSQL database: "
	if [ "$MYSQLBASE" != "yes" ];then
	    if [ -x $PGSQLPATH ];then
		sqltype=PostgreSQL
		SQLTYPE=pgsql
		if [ "$PGSQLBASE" = "yes" ];then
		    echo OPTIONED
		else
	    	    echo EXIST
		fi
	    else
		if [ "$PGSQLBASE" = "yes" ];then
		    sqltype=PostgreSQL
		    SQLTYPE=pgsql
		    echo OPTIONED
		else
		    echo NONE
		fi
	    fi
	else
	    echo "NOT USED"
	fi

	echo -n "checking for MySQL database: "
	if [ "$PGSQLBASE" != "yes" ];then
	    if [ -x $MYSQLPATH ];then
		sqltype=MySQL
		SQLTYPE=mysql
		if [ "$MYSQLBASE" = "yes" ];then
		    echo OPTIONED
		else
		    echo EXIST
		fi
	    else
		if [ "$MYSQLBASE" = "yes" ];then
		    sqltype=MySQL
		    SQLTYPE=mysql
		    echo OPTIONED
		else
		    echo NONE
		fi
	    fi
	else
	    echo "NOT USED"
	fi

	
    ;;
esac

echo using database: $sqltype

if [ "$sqlhost" = "localhost" ];then
    sqlfromhost=localhost
else
    sqlfromhost=`hostname`
fi

if [ -n "$LOGDIR" ]
then
    logdir=$LOGDIR
fi

if [ "$UNAME" = "Linux" -o "$LINUXYES" = "YES" ];then
    if [ "$PREFIX" != "/usr" ]
    then                            
	logdir=${PREFIX}${logdir}
    fi
else
    if [ "$PREFIX" != "/usr/local" ]
    then                            
	logdir=${PREFIX}${logdir}
    fi
fi

echo checking for log directory $logdir

if [ "$UNAME" = "Linux" -o "$LINUXYES" = "YES" ];then
    if [ "$PREFIX" != "/usr" ]
    then                            
	pidfile=${PREFIX}${pidfile}
    fi
else
    if [ "$PREFIX" != "/usr/local" ]
    then                            
	pidfile=${PREFIX}${pidfile}
    fi
fi

if [ "$UNAME" = "Linux" -o "$LINUXYES" = "YES" ];then
    echo checking for Linux version is: $LINUXVERSVION
fi

echo checking for PID file path $pidfile



if [ -z "$sqlmaspasswd" ];then
    echo "Зададим пароль для пользователя $sqlmasteruser;"
    echo "модули ATSlog от имени этого пользователя инициализируют"
    echo "все обращения к SQL серверу".
# Используем генерированный пароль для работы с SQL сервером
    passwordgen
    sqlmaspasswd=$PASSWORD
fi

 sed \
 -e "s/sqlhost=''/sqlhost='$sqlhost'/g" \
 -e "s/sqldatabase=''/sqldatabase='$sqldatabase'/g" \
 -e "s/sqlmasteruser=''/sqlmasteruser='$sqlmasteruser'/g" \
 -e "s/sqlmaspasswd=''/sqlmaspasswd='$sqlmaspasswd'/g" \
 -e "s/sqltype=''/sqltype='$sqltype'/g" \
 -e "s/model=''/model='$model'/g" \
 < ./www/atslog/include/set/conf.inc > ./conf.inc

case "$UPDATE" in
    [Yy][Ee][Ss])
	if [ 0$build -lt 028 ]  ;then
	    echo checking for update from build 28
	    cat ./sql/updateto28.mysql.sql >> ./updatesqltables.mysql.sql.out
	fi

	if [ 0$build -lt 030 ]  ;then
	    echo checking for update from build 30
	    cat ./sql/updateto30.mysql.sql >> ./updatesqltables.mysql.sql.out
	fi

	if [ 0$build -lt 034 ]  ;then
	    echo checking for update from build 34
	    cat ./sql/updateto34.mysql.sql >> ./updatesqltables.mysql.sql.out
	fi

	if [ 0$build -lt 060 ]  ;then
	    echo checking for update from build 60
	    cat ./sql/updateto60.mysql.sql >> ./updatesqltables.mysql.sql.out
	fi

	if [ 0$build -lt 088 ]  ;then
	    echo checking for update from build 88
	    cat ./sql/updateto88.mysql.sql >> ./updatesqltables.mysql.sql.out
	fi

	if [ -f ./updatesqltables.$SQLTYPE.sql.out ];then
	    sed \
	     -e "s/@sqlmaspasswd@/$sqlmaspasswd/g" \
	     -e "s/@sqlfromhost@/$sqlfromhost/g" \
	     -e "s/@sqlmasteruser@/$sqlmasteruser/g" \
	     -e "s/@sqlhost@/$sqlhost/g" \
	     -e "s/@sqldatabase@/$sqldatabase/g" \
	     < ./updatesqltables.$SQLTYPE.sql.out > ./updatesqltables.$SQLTYPE.sql

	fi
	if [ -f ./updatesqltables.mysql.sql.out ];then
	    rm ./updatesqltables.mysql.sql.out
	fi
	if [ -f ./updatesqltables.pgsql.sql.out ];then
	    rm ./updatesqltables.pgsql.sql.out
	fi

	echo "Конфигурируем таблицы SQL сервера для обновления"
    ;;
        *)
	if [ -f ./sql/createsqltables.$SQLTYPE.sql ];then
	sed \
	     -e "s/@sqlmaspasswd@/$sqlmaspasswd/g" \
	     -e "s/@sqlfromhost@/$sqlfromhost/g" \
	     -e "s/@sqlmasteruser@/$sqlmasteruser/g" \
	     -e "s/@sqlhost@/$sqlhost/g" \
	     -e "s/@sqldatabase@/$sqldatabase/g" \
	     < ./sql/createsqltables.$SQLTYPE.sql > ./createsqltables.$SQLTYPE.sql
	fi

	if [ -f ./sql/createuser.$SQLTYPE.sql ];then
	sed \
	     -e "s/@sqlmaspasswd@/$sqlmaspasswd/g" \
	     -e "s/@sqlfromhost@/$sqlfromhost/g" \
	     -e "s/@sqlmasteruser@/$sqlmasteruser/g" \
	     -e "s/@sqlhost@/$sqlhost/g" \
	     -e "s/@sqldatabase@/$sqldatabase/g" \
	     < ./sql/createuser.$SQLTYPE.sql > ./createuser.$SQLTYPE.sql
	fi

	echo "Конфигурируем таблицы SQL сервера для новой установки"
    ;;
esac

 sed \
 -e "s/^sqlmasteruser=atslog/sqlmasteruser=$sqlmasteruser/g" \
 -e "s/^sqlmaspasswd=/sqlmaspasswd=$sqlmaspasswd/g" \
 -e "s/^sqlhost=localhost/sqlhost=$sqlhost/g" \
 -e "s/^sqldatabase=atslog/sqldatabase=$sqldatabase/g" \
 -e "s%^port=cuaa0%port=$port%g" \
 -e "s%^speed=9600%speed=$speed%g" \
 -e "s%^stopbits=1%stopbits=$stopbits%g" \
 -e "s%^charsize=8%charsize=$charsize%g" \
 -e "s%^parity=n%parity=$parity%g" \
 -e "s/^callslogfile=calls.log/callslogfile=$callslogfile/g" \
 -e "s/^startlogfile=atstart.log/startlogfile=$startlogfile/g" \
 -e "s%^bindir=/usr/local/bin%bindir=$bindir%g" \
 -e "s%^langdir=lang%langdir=$langdir%g" \
 -e "s%^logdir=/var/log/atslog%logdir=$logdir%g" \
 -e "s%^howmonth=12%howmonth=$howmonth%g" \
 -e "s%^model=KX-TA616RU%model=$model%g" \
 -e "s%^syslogfacility=user.err%syslogfacility=$syslogfacility%g" \
 -e "s%^libdir=/usr/local/libexec/atslog%libdir=$libdir%g" \
 -e "s%^sharedir=/usr/local/share/atslog%sharedir=$sharedir%g" \
 -e "s%^atslogd=atslogd%atslogd=$atslogd%g" \
 -e "s%^masterscript=atslogmaster%masterscript=$masterscript%g" \
 -e "s%^initscript=/usr/local/etc/rc.d/atslogdinit.sh%initscript=$initscript%g" \
 -e "s%^monthlyscript=/usr/local/etc/periodic/monthly/atslogrotate%monthlyscript=$monthlyscript%g" \
 -e "s%^dailyscript=/usr/local/etc/periodic/daily/atslogdaily%dailyscript=$dailyscript%g" \
 -e "s%^atslogdb=atslogdb.pl%atslogdb=$atslogdb%g" \
 -e "s%^cleardb=atslogcleardb.pl%cleardb=$cleardb%g" \
 -e "s%^curcallslogfile=currentcalls.log%curcallslogfile=$curcallslogfile%g" \
 -e "s%^notwritelog=notwrite.log%notwritelog=$notwritelog%g" \
 -e "s%^debug=no%debug=$debug%g" \
 -e "s%^pidfile=/var/run/atslogd.pid%pidfile=$pidfile%g" \
 -e "s%^fastwrite=yes%fastwrite=$fastwrite%g" \
 -e "s%^sqltype=MySQL%sqltype=$sqltype%g" \
 < ./include/atslog.conf.default > ./atslog.conf

 echo checking for Perl path in scripts/checkDBD.pl
 sed \
 -e "s%/usr/bin/perl%$PERL%g" \
 < ./scripts/checkDBD.pl > ./scripts/checkDBD.out.pl
 chmod a+x ./scripts/checkDBD.out.pl

 echo checking for Perl path in scripts/createdb.pl
 sed \
 -e "s%/usr/bin/perl%$PERL%g" \
 < ./scripts/createdb.pl > ./scripts/createdb.out.pl
 chmod a+x ./scripts/createdb.out.pl

 echo checking for Perl path in atslogcleardb.pl
 sed \
 -e "s%/usr/bin/perl%$PERL%g" \
 < ./include/atslogcleardb.pl > ./atslogcleardb.pl.out
 echo checking for config file path in atslogcleardb.pl
 sed \
 -e "s%/usr/local/etc/atslog.conf%$PREFIX/etc/atslog.conf%g" \
 < ./atslogcleardb.pl.out > ./atslogcleardb.pl
 if [ -f ./atslogcleardb.pl.out ];then
    rm ./atslogcleardb.pl.out
 fi

 echo checking for Perl path in atslogdb.pl
 sed \
 -e "s%/usr/bin/perl%$PERL%g" \
 < ./include/atslogdb.pl > ./atslogdb.pl.out
 echo checking for config file path in atslogdb.pl
 sed \
 -e "s%/usr/local/etc/atslog.conf%$PREFIX/etc/atslog.conf%g" \
 < ./atslogdb.pl.out > ./atslogdb.pl
 if [ -f ./atslogdb.pl.out ];then
    rm ./atslogdb.pl.out
 fi

 echo checking for config file path in atslogmaster
 sed \
 -e "s%/usr/local/etc/atslog.conf%$PREFIX/etc/atslog.conf%g" \
 < ./include/atslogmaster > ./atslogmaster

 echo checking for config file path in atslogdaily
 sed \
 -e "s%/usr/local/etc/atslog.conf%$PREFIX/etc/atslog.conf%g" \
 < ./include/atslogdaily > ./atslogdaily

 echo checking for config file path in atslogrotate
 sed \
 -e "s%/usr/local/etc/atslog.conf%$PREFIX/etc/atslog.conf%g" \
 < ./include/atslogrotate > ./atslogrotate

 echo checking for PREFIX path in Makefile
 sed \
 -e "s%/usr/local%$PREFIX%g" \
 < ./Makefile > ./Makefile.out

 echo checking for PREFIX path in installing script
 sed \
 -e "s%PREFIX=\"/usr/local\"%PREFIX=\"$PREFIX\"%g" \
 < ./installing > ./installing.out

 echo checking for config file path in atslogdinit
 sed \
 -e "s%/usr/local/etc/atslog.conf%$PREFIX/etc/atslog.conf%g" \
 < ./atslogdinit.out > ./atslogdinit
 if [ -f ./atslogdinit.out ];then
    rm ./atslogdinit.out
 fi
# Check for Perl DBI.
    echo -n "checking for DBI $sqltype class for Perl: "
    ./scripts/checkDBD.out.pl $sqltype 1> /dev/null 2> /dev/null
    if [ $? -ne 0 ];then
	echo "ERROR"
	if [ "$SQLTYPE" = "pgsql" ];then
	    echo ======================================================
	    echo Пожалуйста, установите DBD::Pg модуль для Perl
	    echo Смотрите http://search.cpan.org/~rudy/DBD-Pg/
	    echo и        http://search.cpan.org/~timb/DBI/
	    echo ======================================================
	    echo
	else
	    echo =======================================================
	    echo Пожалуйста, установите DBD::MySQL модуль для Perl
	    echo Смотрите http://search.cpan.org/~timb/DBI/
	    echo и        http://search.cpan.org/~rudy/DBD-mysql/
	    echo =======================================================
	    echo
	fi
	exit 1
    else
	echo "OK"
    fi

echo "Configure done."
exit $?
