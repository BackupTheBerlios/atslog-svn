#!/bin/sh
# ATSlog version @version@ build @buildnumber@ www.atslog.dp.ua  
# Copyright (C) 2003 Denis CyxoB www.yamiyam.dp.ua
#

# Установим рабочие переменные
PATH=/sbin:/usr/sbin:/bin:/usr/bin:/usr/local/sbin:/usr/local/bin:.:$bindir:$sharedir
UNAME=`uname`
PREFIX_FROM_CONFIGURE_SCRIPT=/usr/local
ETC_PREFX_FROM_CONFIGURE_SCRIPT=/usr/local/etc

# Проверим наличие необходимых системных утулит.
checksysutils(){
    for ac_prg in printf mkdir cp install chown chmod touch read stty [ dirname
    do
	echo -n "checking if system file \"$ac_prg\" is existing: "
	for ac_dir in /bin /sbin /usr/bin /usr/sbin /usr/local/bin /usr/local/sbin /dev
	do
	    if [ -e "$ac_dir/$ac_prg" ]; then
	        echo "YES"
		FILE_NOT_EXISTS=0
		break;
	    else
		FILE_NOT_EXISTS=1
	    fi
	done
	if [ $FILE_NOT_EXISTS -ne 0 ]; then
	    echo "NONE"
	    echo "install aborted!"
	    exit 1
	fi
    done
}

for i
do
    case "$1" in
	"--help")
	    HELP="yes"
	;;
	--sqlroot=*)
	    sqlrootpassword=`echo "$1" | sed 's/[-_a-zA-Z0-9]*=//'`
	;;
	--deinstall)
	    TODO="deinstall"
	;;
	--install)
	    TODO="install"
	;;
	--prefix=*)
	    PREFIX=`echo "$1" | sed 's/[-_a-zA-Z0-9]*=//'`
	;;
	--etc-prefix=*)
	    ETC_PREFX=`echo "$1" | sed 's/[-_a-zA-Z0-9]*=//'`
	;;
    esac
    shift
done

if [ -z "$PREFIX" ]
then
    PREFIX=$PREFIX_FROM_CONFIGURE_SCRIPT
fi

if [ -z "$ETC_PREFX" ]
then
    ETC_PREFX=$ETC_PREFX_FROM_CONFIGURE_SCRIPT
fi

if [ -z "$TODO" ]
then
    HELP="yes"
fi

# Переменную $LANG - берём из настройки локали.
if [ -f ./lang/$LANG ]; then
	. ./lang/$LANG
    elif [ -f ./lang/en_US ]; then
	. ./lang/en_US
    else
        echo "Can't open language file"
    exit 1
fi

echo "Usage: installing [options]
Options: [defaults in brackets after descriptions]
Use: installing --help for help."

# Call to function
checksysutils

if [ "$HELP" = "yes" ];then
    printf "$msg47" $PREFIX $ETC_PREFX
    exit 0
fi


readpasswd(){
    printf "$msg48"
    trap 'exit;' 0 1 2 3 15
    echo -n $msg49
    stty -echo
    read sqlrootpassword
    stty echo
    echo "OK"
}
copying(){

    if [ ! -d $logdir ];then
        mkdir -p $logdir
	chmod 700 $logdir
	chown root:wheel $logdir
    else
        chmod 700 $logdir
    fi
    if [ ! -d $libdir ];then
        mkdir -p $libdir
	chmod 755 $libdir
	chown root:wheel $libdir
    fi
    if [ ! -d $bindir ];then
        mkdir -p $bindir
	chmod 755 $bindir
	chown root:wheel $bindir
    fi
    if [ ! -d $sharedir ];then
        mkdir -p $sharedir
	chmod 755 $sharedir
	chown root:wheel $sharedir
    fi
    if [ ! -d $sharedir/$langdir ];then
        mkdir -p $sharedir/$langdir
	chmod 755 $sharedir/$langdir
	chown root:wheel $sharedir/$langdir
    fi
    if [ ! -d $PREFIX/www/atslog ];then
        mkdir -p $PREFIX/www/atslog
	chmod 555 $PREFIX/www/atslog
    fi
    if [ ! -d $sharedir/sql ];then
        mkdir -p $sharedir/sql
	chmod 555 $sharedir/sql
    fi
    if [ ! -d $ETC_PREFX ];then
        mkdir -p $ETC_PREFX
    fi

    touch $logdir/$callslogfile
    touch $logdir/$startlogfile
    touch $logdir/$curcallslogfile
    touch $logdir/$notwritelog

    DAILYPATH=`dirname $monthlyscript`
    MONTHLYPATH=`dirname $dailyscript`
    PIDFILEPATH=`dirname $pidfile`

    for PERPATH in $DAILYPATH $MONTHLYPATH $PIDFILEPATH
    do
	if [ ! -d $PERPATH ];then
    	    mkdir -p $PERPATH
    	    chmod 555 $PERPATH
	fi
    done
    

    if [ "$UNAME" = "Linux" ];then
	INITDIR=/etc/rc.d
	for stasto in "rc2.d/K01atslogd" "rc2.d/S80atslogd" "rc3.d/K01atslogd" "rc3.d/S80atslogd" "rc5.d/K01atslogd" "rc5.d/S80atslogd"
	do
	    if [ ! -L $INITDIR/$stasto ];then
		ln -s $initscript $INITDIR/$stasto
	    fi
	done

	if [ ! -L /etc/atslog.conf ];then
	    ln -s $ETC_PREFX/atslog.conf /etc/atslog.conf
	fi
    fi
    if [ ! -d $ETC_PREFX/rc.d ];then
        mkdir -p $ETC_PREFX/rc.d
    fi                          

    install -m 755 ./tmp/rc.d/atslogdinit $initscript
    install -m 755 ./tmp/include/atslogrotate $monthlyscript
    install -m 755 ./tmp/include/atslogdaily $dailyscript
    install -m 755 ./tmp/include/atslogdb.pl $bindir/$atslogdb
    install -m 600 ./tmp/include/atslog.conf $ETC_PREFX/atslog.conf
    install -m 644 ./tmp/include/atslog.conf $ETC_PREFX/atslog.conf.default
    install -m 644 ./tmp/include/atslog.conf $sharedir/atslog.conf.default

    install -m 644 ./tmp/libexec/* $libdir/

    install -m 755 ./tmp/src/atslogd/atslogd $bindir/$atslogd
    install -m 755 ./tmp/include/atslogmaster $bindir/$masterscript
    install -m 755 ./tmp/include/atslogcleardb.pl $bindir/$cleardb
    install -m 644 ./tmp/installing $sharedir/installing
    install -m 644 ./tmp/INSTALL $sharedir/INSTALL
    install -m 644 ./tmp/Makefile $sharedir/Makefile
    install -m 644 ./tmp/README $sharedir/README
    install -m 644 ./tmp/DEINSTALL $sharedir/DEINSTALL
    install -m 644 ./tmp/UPDATING $sharedir/UPDATING
    install -m 644 ./tmp/USING $sharedir/USAGE
    install -m 644 ./tmp/CHANGES $sharedir/CHANGES
    cp -R ./tmp/textlogs $sharedir
    cp -R ./tmp/www/* $PREFIX/www
    cp -R ./tmp/sql/* $sharedir/sql
    chmod -R a-w,a+rX $PREFIX/www/atslog
    cp -R ./tmp/lang/* $sharedir/$langdir
}

case "$TODO" in
deinstall)

# Start deinstalling
    if [ -r $ETC_PREFX/atslog.conf ];then
	. $ETC_PREFX/atslog.conf
    elif [ -r ./tmp/include/atslog.conf ]; then
    	. ./tmp/include/atslog.conf
    elif [ -r ./tmp/include/atslog.conf.default ]; then
    	. ./tmp/include/atslog.conf.default
    elif [ -r ./include/atslog.conf.default ]; then
    	. ./include/atslog.conf.default
    else
        echo "Can't open config file."
        exit 1
    fi

    rm $initscript
    if [ "$UNAME" = "Linux" ];then
	INITDIR=/etc/rc.d
	for stasto in "rc2.d/K01atslogd" "rc2.d/S80atslogd" "rc3.d/K01atslogd" "rc3.d/S80atslogd" "rc5.d/K01atslogd" "rc5.d/S80atslogd"
	do
	    if [ -L $INITDIR/$stasto ];then
		rm  $INITDIR/$stasto
	    fi
	done
    fi
    rm $monthlyscript
    rm $dailyscript
    rm $bindir/$atslogdb
    rm $ETC_PREFX/atslog.conf.default
    rm $sharedir/atslog.conf.default
    rm $libdir/*
    rm $bindir/$masterscript
    rm $bindir/$atslogd
    rm $bindir/$cleardb
    rm $sharedir/installing
    rm $sharedir/INSTALL
    rm $sharedir/Makefile
    rm $sharedir/DEINSTALL
    rm $sharedir/README
    rm $sharedir/UPDATING
    rm $sharedir/USAGE
    rm $sharedir/CHANGES

    rm -rf $sharedir/$langdir
    rm -rf $PREFIX/www/atslog
    rm -rf $sharedir/sql
    rm -rf $sharedir/textlogs

    if [ ! -s $logdir/$callslogfile ];then
	rm -f $logdir/$callslogfile
    fi
    if [ ! -s $logdir/$curcallslogfile ];then
	rm -f $logdir/$curcallslogfile
    fi
    if [ ! -s $logdir/$startlogfile ];then
	rm -f $logdir/$startlogfile
    fi
    if [ ! -s $logdir/$notwritelog ];then
	rm -f $logdir/$notwritelog
    fi

    DAILYPATH=`dirname $monthlyscript`
    MONTHLYPATH=`dirname $dailyscript`
    PIDFILEPATH=`dirname $pidfile`
    #echo $DAILYPATH $MONTHLYPATH

    for PERPATH in $DAILYPATH $MONTHLYPATH $PIDFILEPATH $sharedir $libdir $logdir
    do
	if [ -d $PERPATH ];then
	    if [ `ls -1l $PERPATH | grep -c -` = 0 ];then
		rmdir -p $PERPATH 2> /dev/null
	    else
		printf "$msg50" $PERPATH
	    fi
	fi
    done

    echo $msg51
    ;;
install)

# Readin config file
    if [ -r ./tmp/include/atslog.conf ]; then
	. ./tmp/include/atslog.conf
    else
        echo "Can't open config file. Please start configure."
        exit 1
    fi

# Начнём наш install.log
echo -n >./tmp/install.log

# Start SQL operations
    if [ -f ./tmp/sql/thisupdatesqltables.pgsql.sql -o -f ./tmp/sql/thiscreatesqltables.pgsql.sql -o -f ./tmp/sql/thiscreateuser.pgsql.sql ];then
	SQLTYPE=pgsql
	sqltype=PostgreSQL
    else
	SQLTYPE=mysql
	sqltype=MySQL
    fi

    for sqlinfo in thiscreateuser.$SQLTYPE.sql thiscreatesqltables.$SQLTYPE.sql thisupdatesqltables.$SQLTYPE.sql
    do
	if [ -f ./tmp/sql/$sqlinfo ];then
	    DBOPERATIONS=true
	fi
    done

    if [ $DBOPERATIONS ];then
    	printf "$msg52" $sqltype
    fi

    ERROECHO=0
    LASTOPERAT=0
    for sqlfile in thiscreateuser.$SQLTYPE.sql thiscreatesqltables.$SQLTYPE.sql thisupdatesqltables.$SQLTYPE.sql
    do
    if [ -f ./tmp/sql/$sqlfile ];then
        if [ "$sqlfile" = "thiscreatesqltables.pgsql.sql" ];then
    	    cat ./tmp/sql/$sqlfile | ./tmp/scripts/createdb.pl $sqlmaspasswd $sqlmasteruser 2>>./tmp/install.log
	    if [ $? -ne 0 ];then
		ERROECHO=1
	    fi
	else
	    cat ./tmp/sql/$sqlfile | ./tmp/scripts/createdb.pl 2>>./tmp/install.log
	    LASTOPERAT=$?
	    if [ $LASTOPERAT -eq 1 ];then
	        ERROECHO=1
	    fi
	    if [ $LASTOPERAT -eq 2 ];then
	        if [ -z "$sqlrootpassword" ]
	        then
		    echo "NEED A PASSWORD!"
		    # Call to function
	    	    readpasswd
		else
		    echo -n $msg53
	    	fi
		cat ./tmp/sql/$sqlfile | ./tmp/scripts/createdb.pl $sqlrootpassword 2>>./tmp/install.log
		if [ $? -ne 0 ];then
		    ERROECHO=1
		fi
	    fi
	fi
    fi
    done
    
    if [ $DBOPERATIONS ];then
	if [ $ERROECHO != 1 ];then
    	    echo "OK"
	else
    	    echo $msg54
	fi
    fi

    echo $msg55
# Call to function
    copying

    if [ "$ERROECHO" != "1" ]
    then
	printf "$msg56" $ETC_PREFX
    else
	printf "$msg57" $ETC_PREFX
    fi
    ;;
esac
exit $?
